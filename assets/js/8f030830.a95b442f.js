"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[618],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=l.createContext({}),c=function(e){var t=l.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return l.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,k=u["".concat(i,".").concat(m)]||u[m]||d[m]||r;return n?l.createElement(k,o(o({ref:t},s),{},{components:n})):l.createElement(k,o({ref:t},s))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[u]="string"==typeof e?e:a,o[1]=p;for(var c=2;c<r;c++)o[c]=n[c];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7857:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var l=n(7462),a=(n(7294),n(3905));const r={sidebar_position:5},o="Development",p={unversionedId:"development",id:"development",title:"Development",description:"To set up a development environment to build this project, you'll need to install some helpful tools.",source:"@site/docs/development.md",sourceDirName:".",slug:"/development",permalink:"/docs/development",draft:!1,editUrl:"https://github.com/bkonkle/nakago/tree/main/website/docs/development.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"documentationSidebar",previous:{title:"Examples",permalink:"/docs/examples"}},i={},c=[{value:"Clippy",id:"clippy",level:2},{value:"pre-commit",id:"pre-commit",level:2},{value:"libclang",id:"libclang",level:2},{value:"Cargo Make",id:"cargo-make",level:2},{value:"Running the Local dev server",id:"running-the-local-dev-server",level:2},{value:"Update Dependencies",id:"update-dependencies",level:2},{value:"Examples: Docker Build",id:"examples-docker-build",level:2}],s={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,l.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"development"},"Development"),(0,a.kt)("p",null,"To set up a development environment to build this project, you'll need to install some helpful tools."),(0,a.kt)("h2",{id:"clippy"},"Clippy"),(0,a.kt)("p",null,"For helpful linting rools, install ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/rust-lang/rust-clippy"},"Clippy")),(0,a.kt)("p",null,"Run it with ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"cargo clippy --fix\n")),(0,a.kt)("p",null,"If you're using VS Code, configure the ",(0,a.kt)("inlineCode",{parentName:"p"},"rust-analyzer")," plugin to use it (in ",(0,a.kt)("em",{parentName:"p"},"settings.json"),"):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "rust-analyzer.checkOnSave.command": "clippy"\n}\n')),(0,a.kt)("h2",{id:"pre-commit"},"pre-commit"),(0,a.kt)("p",null,"Install pre-commit to automatically set up Git hook scripts."),(0,a.kt)("p",null,"In Ubuntu, the package to install is ",(0,a.kt)("inlineCode",{parentName:"p"},"pre-commit"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt install pre-commit\n")),(0,a.kt)("p",null,"On Mac with Homebrew, the package is also ",(0,a.kt)("inlineCode",{parentName:"p"},"pre-commit"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"brew install pre-commit\n")),(0,a.kt)("h2",{id:"libclang"},"libclang"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo-spellcheck")," utility depends on ",(0,a.kt)("a",{parentName:"p",href:"https://clang.llvm.org/doxygen/group__CINDEX.html"},(0,a.kt)("inlineCode",{parentName:"a"},"libclang")),"."),(0,a.kt)("p",null,"In Ubuntu, the package to install is ",(0,a.kt)("inlineCode",{parentName:"p"},"libclang-dev"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt install libclang-dev\n")),(0,a.kt)("h2",{id:"cargo-make"},"Cargo Make"),(0,a.kt)("p",null,"To use build scripts from the ",(0,a.kt)("em",{parentName:"p"},"Makefile.toml"),", install Cargo Make:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"cargo install cargo-make\n")),(0,a.kt)("p",null,'Run "setup" to install some tooling dependencies:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"cargo make setup\n")),(0,a.kt)("h2",{id:"running-the-local-dev-server"},"Running the Local dev server"),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo")," to run the dev server locally:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"cargo make dev\n")),(0,a.kt)("h2",{id:"update-dependencies"},"Update Dependencies"),(0,a.kt)("p",null,"First, install the ",(0,a.kt)("inlineCode",{parentName:"p"},"outdated")," command for ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"cargo install cargo-outdated\n")),(0,a.kt)("p",null,"Then, update and check for any major dependency changes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"cargo update\ncargo outdated\n")),(0,a.kt)("h2",{id:"examples-docker-build"},"Examples: Docker Build"),(0,a.kt)("p",null,"To build locally, use Buildkit:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"DOCKER_BUILDKIT=1 docker build -t async-graphql -f examples/async-graphql/Dockerfile .\n")),(0,a.kt)("p",null,"To clear the build cache:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"docker builder prune --filter type=exec.cachemount\n")),(0,a.kt)("p",null,"To inspect the local filesystem:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"docker run --rm -it --entrypoint=/bin/bash async-graphql\n")),(0,a.kt)("p",null,"To inspect the full build context:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"docker image build --no-cache -t build-context -f - . <<EOF\nFROM busybox\nWORKDIR /build-context\nCOPY . .\nCMD find .\nEOF\n\ndocker container run --rm build-context\n")),(0,a.kt)("p",null,"And to clean up the build context test image:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"docker image rm build-context\n")))}d.isMDXComponent=!0}}]);