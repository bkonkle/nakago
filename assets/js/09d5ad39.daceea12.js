"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[30],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>d});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=n.createContext({}),s=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},m=function(e){var a=s(e.components);return n.createElement(p.Provider,{value:a},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},k=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(t),k=r,d=c["".concat(p,".").concat(k)]||c[k]||u[k]||i;return t?n.createElement(d,o(o({ref:a},m),{},{components:t})):n.createElement(d,o({ref:a},m))}));function d(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=k;var l={};for(var p in a)hasOwnProperty.call(a,p)&&(l[p]=a[p]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}k.displayName="MDXCreateElement"},4381:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=t(7462),r=(t(7294),t(3905));const i={sidebar_position:4},o="Examples",l={unversionedId:"examples",id:"examples",title:"Examples",description:"Async-GraphQL",source:"@site/docs/examples.md",sourceDirName:".",slug:"/examples",permalink:"/nakago/docs/examples",draft:!1,editUrl:"https://github.com/bkonkle/nakago/tree/main/website/docs/examples.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"documentationSidebar",previous:{title:"Async-GraphQL",permalink:"/nakago/docs/features/async-graphql"},next:{title:"Development",permalink:"/nakago/docs/development"}},p={},s=[{value:"Async-GraphQL",id:"async-graphql",level:2},{value:"Notes",id:"notes",level:3}],m={toc:s},c="wrapper";function u(e){let{components:a,...t}=e;return(0,r.kt)(c,(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"examples"},"Examples"),(0,r.kt)("h2",{id:"async-graphql"},"Async-GraphQL"),(0,r.kt)("p",null,"The Async-GraphQL example demonstrates an example Application architecture using Async-GraphQL, SeaORM, and Axum."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/bkonkle/nakago/blob/feature/nakago-sea-orm/examples/async-graphql/src/main.rs"},"Main")," is where the AxumApplication is initialized, using ",(0,r.kt)("inlineCode",{parentName:"li"},"pico_args")," for light argument parsing."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/bkonkle/nakago/blob/feature/nakago-sea-orm/examples/async-graphql/src/routes.rs"},"Axum Routes")," are defined in ",(0,r.kt)("inlineCode",{parentName:"li"},"routes.rs"),", along with an Inject Provider."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/bkonkle/nakago/blob/feature/nakago-sea-orm/examples/async-graphql/src/handlers.rs"},"Axum Handlers")," are defined in ",(0,r.kt)("inlineCode",{parentName:"li"},"handlers.rs"),"."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/bkonkle/nakago/blob/feature/nakago-sea-orm/examples/async-graphql/src/graphql.rs"},"GraphQL Schema")," is initialized in ",(0,r.kt)("inlineCode",{parentName:"li"},"graphql.rs"),"."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/bkonkle/nakago/blob/feature/nakago-sea-orm/examples/async-graphql/src/init.rs"},"InitApp")," Hook intializes dependencies for Startup."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/bkonkle/nakago/tree/feature/nakago-sea-orm/examples/async-graphql/src/domains"},"Domains")," are defined in the ",(0,r.kt)("inlineCode",{parentName:"li"},"domains")," directory, and handle Database Models, GraphQL Resolvers, supporting Services, and more.")),(0,r.kt)("p",null,"This application will be slowly integrated into the framework itself, leaving a clean implementation of what is needed for your particular use cases rather than reinventing the wheel for each application."),(0,r.kt)("h3",{id:"notes"},"Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Copy ",(0,r.kt)("inlineCode",{parentName:"p"},".envrc.example")," to ",(0,r.kt)("inlineCode",{parentName:"p"},".envrc")," and edit to fill in live values.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cargo make db-create-async-graphql"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cargo make db-migrate-async-graphql"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Coming soon:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo make db-create-cqrs-es"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Coming soon:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo make db-migrate-cqrs-es"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cargo make integration")))))}u.isMDXComponent=!0}}]);