"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[864],{1498:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=s(4848),a=s(8453);const r={sidebar_position:4},t="Examples",l={id:"examples",title:"Examples",description:"Simple",source:"@site/docs/examples.md",sourceDirName:".",slug:"/examples",permalink:"/docs/examples",draft:!1,unlisted:!1,editUrl:"https://github.com/bkonkle/nakago/tree/main/website/docs/examples.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"documentationSidebar",previous:{title:"Async-GraphQL",permalink:"/docs/features/async-graphql"},next:{title:"Development",permalink:"/docs/development"}},o={},c=[{value:"Simple",id:"simple",level:2},{value:"Async-GraphQL",id:"async-graphql",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"examples",children:"Examples"})}),"\n",(0,i.jsx)(n.h2,{id:"simple",children:"Simple"}),"\n",(0,i.jsx)(n.p,{children:"The Simple example is a very simple Axum HTTP service using JWT with JWKS for authentication, with a single route that returns a JSON response and an integration test that calls it."}),"\n",(0,i.jsx)(n.h2,{id:"async-graphql",children:"Async-GraphQL"}),"\n",(0,i.jsx)(n.p,{children:"The Async-GraphQL example demonstrates an example Application architecture using Async-GraphQL, SeaORM, and Axum."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/bkonkle/nakago/blob/main/examples/async-graphql/src/main.rs",children:"Main"})," is where the AxumApplication is initialized, using ",(0,i.jsx)(n.code,{children:"pico_args"})," for light argument parsing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/bkonkle/nakago/blob/main/examples/async-graphql/src/http/routes.rs",children:"Axum Routes"})," are defined in ",(0,i.jsx)(n.code,{children:"routes.rs"}),", along with an Inject Provider."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/bkonkle/nakago/blob/main/examples/async-graphql/src/http/handlers.rs",children:"Axum Handlers"})," are defined in ",(0,i.jsx)(n.code,{children:"handlers.rs"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.a,{href:"https://github.com/bkonkle/nakago/blob/main/examples/async-graphql/src/graphql.rs",children:"GraphQL Schema"})," is initialized in ",(0,i.jsx)(n.code,{children:"graphql.rs"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.a,{href:"https://github.com/bkonkle/nakago/blob/main/examples/async-graphql/src/init.rs",children:"init::app()"})," function intializes dependencies."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/bkonkle/nakago/tree/feature/nakago-sea-orm/examples/async-graphql/src/domains",children:"Domains"})," are defined in the ",(0,i.jsx)(n.code,{children:"domains"})," directory, and handle Database Models, GraphQL Resolvers, supporting Services, and more."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This application will be slowly integrated into the framework itself, leaving a clean implementation of what is needed for your particular use cases rather than reinventing the wheel for each application."})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var i=s(6540);const a={},r=i.createContext(a);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);